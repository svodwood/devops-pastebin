{"version":3,"file":"component---src-pages-using-typescript-tsx-167e2689b59e07c76e88.js","mappings":"6MA4CaA,EAA0B,WAAH,OAASC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,oBAAqB,EAE7E,UAjCwD,SAAH,OACnDC,EAAI,EAAJA,KACAC,EAAI,EAAJA,KACAC,EAAQ,EAARA,SAAQ,OAERL,EAAAA,cAACM,EAAAA,EAAM,CAACJ,MAAM,mBAAmBG,SAAUA,GACzCL,EAAAA,cAAAA,KAAAA,KAAAA,0CACAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,YAAiB,+DACdA,EAAAA,cAAAA,KAAAA,KAAAA,eAAoB,wEAGlEA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,cAAmB,oBACxDA,EAAAA,cAAAA,KAAAA,KAAAA,cAAmB,gBAAaA,EAAAA,cAAAA,KAAAA,KAAAA,YAAiB,UAEvDA,EAAAA,cAAAA,IAAAA,KAAAA,kCACiCI,EAAI,uBAAsB,IACxDD,EAAKI,KAAKC,UAAS,KAEtBR,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGS,KAAK,yEAAuE,kCAE3E,KAGNT,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,KAAG,2BACL,C,+CCNX,IAhCe,SAAH,GAAuC,IAG7CC,EAHYP,EAAQ,EAARA,SAAUH,EAAK,EAALA,MAAOW,EAAQ,EAARA,SAE3BC,EADcC,sBACDV,EAASW,SAiB5B,OAbEJ,EADEE,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAP,KAAI,CAACC,GAAG,KAAKT,IAKhB,gBAAC,EAAAQ,KAAI,CAACO,UAAU,mBAAmBN,GAAG,KACnCT,GAML,uBAAKe,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBL,GACnC,4BAAOC,GACP,oCACK,IAAIK,MAAOC,cAAa,mBAE3B,qBAAGV,KAAK,4BAA0B,WAI1C,C,+CCtBMR,EAAM,SAAH,GAAgD,IAAD,MAAzCmB,EAAW,EAAXA,YAAmBlB,GAAF,EAAJmB,KAAW,EAALnB,OAAOW,EAAQ,EAARA,SAC/BN,GAASe,EAAAA,EAAAA,gBAAe,aAAxBf,KAgBFgB,EAAkBH,GAAeb,EAAKiB,aAAaJ,YACnDK,EAAgC,QAApB,EAAGlB,EAAKiB,oBAAY,aAAjB,EAAmBtB,MAExC,OACE,gCACE,6BAAQuB,EAAkBvB,EAAK,MAAMuB,EAAiBvB,GACtD,wBAAMwB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASzB,IACnC,wBAAM0B,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAApB,EAAKiB,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASzB,IACpC,wBAAMwB,KAAK,sBAAsBC,QAASJ,IACzCV,EAGP,EAEAZ,EAAI8B,aAAe,CACjBX,YAAY,IAQd,K","sources":["webpack://devops-pastebin/./src/pages/using-typescript.tsx","webpack://devops-pastebin/./src/components/layout.js","webpack://devops-pastebin/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              linkedin\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","data","path","location","Layout","site","buildTime","href","Link","to","header","children","isRootPath","__PATH_PREFIX__","pathname","className","Date","getFullYear","description","lang","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}